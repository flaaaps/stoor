import { GetStaticProps } from "next"
import Head from "next/head"
import Image from "next/image"
import Link from "next/link"
import { useContext } from "react"
import { server } from "../config"
import { NavigatorContext } from "../context/NavigatorContext"
import { formatPrice } from "../lib/format"
import { shimmer, toBase64 } from "../lib/image"
// import Image from "next/image"
import styles from "../styles/Home.module.css"

export interface IProduct {
    sku: string
    name: string
    imageUrl?: string
    images: string[]
    type: {
        name: string
    }
    sex: string
    price: number
    identifier: string
    collectionId: number
}

export interface ICollection {
    id: number
    name: string
    identifier: string
    header: string
    description: string
}
export const getStaticProps: GetStaticProps = async () => {
    const res = await fetch(`${server}/products`)
    const collectionsRes = await fetch(`${server}/collections`)
    const { data: collections } = await collectionsRes.json()
    const { data } = await res.json()

    return {
        props: {
            collections,
            products: data
        }
    }
}

type Props = {
    products: IProduct[]
    collections: ICollection[]
}

export default function Home({ products, collections }: Props) {
    const { currencyCode, language } = useContext(NavigatorContext)
    return (
        <div className={styles.container}>
            <Head>
                <title>stoor</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
                <h1 className={styles.title}>Prepared To Die</h1>

                <p className={styles.description}>Take a look at some of our products!</p>
                <div>
                    {collections.map(collection => (
                        <div key={collection.id} style={{ marginBottom: "2rem" }}>
                            <h1 className={styles.collectionName}>
                                <Link href={`/collection/${collection.identifier}`}>
                                    {collection.name}
                                </Link>
                            </h1>
                            <p className={styles.collectionHeader}>{collection.header}</p>
                            <div className={styles.grid} key={collection.identifier}>
                                {products
                                    .filter(prod => prod.collectionId === collection.id)
                                    .slice(0, 3)
                                    .map(product => (
                                        <div key={product.sku} className={styles.card}>
                                            <Link href={`/product/${product.identifier}`} passHref>
                                                <a>
                                                    <h2
                                                        style={{
                                                            overflow: "hidden",
                                                            textOverflow: "ellipsis",
                                                            whiteSpace: "nowrap"
                                                        }}
                                                    >
                                                        {product.name}
                                                    </h2>
                                                    <Image
                                                        placeholder="blur"
                                                        blurDataURL={`data:image/svg+xml;base64,${toBase64(
                                                            shimmer(300, 300)
                                                        )}`}
                                                        height="300"
                                                        width="300"
                                                        src={product.imageUrl || product.images[0]}
                                                        alt="Product Image"
                                                    />
                                                    <p className={styles.priceTag}>
                                                        {formatPrice(
                                                            product.price,
                                                            language?.locale,
                                                            currencyCode || "USD"
                                                        )}
                                                    </p>
                                                </a>
                                            </Link>
                                        </div>
                                    ))}
                            </div>
                        </div>
                    ))}
                </div>
            </main>

            <footer className={styles.footer}>
                <a
                    href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                    target="_blank"
                    rel="noopener noreferrer"
                >
                    Powered by Vercel
                </a>
            </footer>
        </div>
    )
}
